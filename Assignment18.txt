1. Write a function to calculate length of the string

Ans.#include<stdio.h>

    int lenStr(char b[])
    {
        int i;
        for(i=0; b[i]; i++);
        return i;
    }

    int main()
    {
        char s[10]="Gadha";
        int a;
        printf("length is %d",lenStr(s));
        return 0;
    }

2. Write a function to reverse a string.


Ans.#include<stdio.h>

    void reverse(char a[], int n)
    {
        char b;
        int i,k=1;
        int m;
        m=n/2;
        for(i=0;i<m;i++)
        {
            b=a[i];
            a[i]=a[n-k];
            a[n-k]=b;
            k++;
        }
    }

    void display(char a[], int n)
    {
        for(int i=0;i<n;i++)
        {
            printf("%c ",a[i]);
        }
    }

    int main()
    {
        char b[]="prem";
        reverse(b, 4);
        display(b, 4);
        return 0;
    }



3. Write a function to compare two strings.


Ans.#include<stdio.h>

    int stringCompare(char a[], char b[])
    {
        int i;
        int flag=0;
        for(i=0; a[i] !='\0' || b[i]!='\0'; i++)
        {
            if(a[i]!=b[i])
            {
                flag=1;
                break;
            }
        }
        if(flag==0)
        {
            return 0;
        }
        if(a[i]>b[i])
            return 1;
        else
            return -1;
    }


    int main()
    {
        char a[]="Computer";
        char b[]="CompUter";

        int v;
        v=stringCompare(a,b);
        printf("%d\n",v);
        if(v==0)
        {
            printf("Strings are same");
        }
        else if(v>0)
        {
            printf("String 1 is greater");
        }
        else
        {
            printf("String 2 is greater");
        }
        return 0;
    }



4. Write a function to transform string into uppercase


Ans.#include<stdio.h>

    void uppercase(char a[])
    {
        int i=0;
        for(;a[i];i++)
        {
            if(a[i]>=90)
            {
                a[i]=a[i]-32;
            }
        }
    }

    void display(char a[], int n)
    {
        for(int i=0; i<n; i++)
        {
            printf("%c ",a[i]);
        }
    }

    int main()
    {
        char a[]="IneuRon";
        uppercase(a);
        display(a, 7);
        return 0;
    }



5. Write a function to transform a string into lowercase


Ans.#include<stdio.h>

    void lowercase(char a[])
    {
        int i=0;
        for(;a[i];i++)
        {
            if(a[i]<=90)
            {
                a[i]=a[i]+32;
            }
        }
    }

    void display(char a[], int n)
    {
        for(int i=0; i<n; i++)
        {
            printf("%c ",a[i]);
        }
    }

    int main()
    {
        char a[]="ayuSh";
        lowercase(a);
        display(a, 5);
        return 0;
    }




6. Write a function to check whether a given string is an alphanumeric string or not.
(Alphanumeric string must contain at least one alphabet and one digit)


Ans.#include<stdio.h>

    int alphanumeric(char a[])
    {
        int i;
        int d=0;
        int k=0;
        for(i=0;a[i];i++)
        {
            if(a[i]>=48 && a[i]<=57)
            {
                d=1;
            }
            if((a[i]>=65 && a[i]<=90)||(a[i]>=97 && a[i]<=122))
            {
                k=1;
            }
        }
        if(d==1 && k==1)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }

    int main()
    {
        char a[]="b6";
        if(alphanumeric(a))
        {
            printf("Strings are alphanumeric");
        }
        else
        {
            printf("Strings are not alphanumeric");
        }
        return 0;
    }



7. Write a function to check whether a given string is palindrome or not.


Ans.#include<stdio.h>

    void reverse(char a[], int n)
    {
        char b;
        int i,k=1;
        int m;
        m=n/2;
        for(i=0;i<m;i++)
        {
            b=a[i];
            a[i]=a[n-k];
            a[n-k]=b;
            k++;
        }
    }

    void display(char a[], int n)
    {
        for(int i=0;i<n;i++)
        {
            printf("%c ",a[i]);
        }
    }

    int main()
    {
        char b[]="malayalam";
        char c[20];
        int f=0;

        int i;
        int j;

        for(i=0; b[i]; i++)
        {
            c[i]=b[i];
        }


        reverse(b, 9);

        for(j=0; b[j]; j++)
        {
            if(b[j] != c[j])
            {
                f=1;
                break;
            }
        }

        if(f==0)
        {
            printf("yes");
        }
        else
        {
            printf("No");
        }

        return 0;
    }


8. Write a function to count words in a given string


Ans.#include<stdio.h>

    int countwords(char a[])
    {
        int count=1;
        for(int i=0; a[i]; i++)
        {
            if(a[i]==' ' && a[i+1]!=' ')
            {
                count=count+1;
            }
        }
        return count;
    }

    int main()
    {
        char a[100]="My name is Ayush Aggarwal";
        int v;
        v=countwords(a);
        printf("%d",v);
    }



9. Write a function to reverse a string word wise. (For example if the given string is
“Mysirg Education Services” then the resulting string should be “Services Education
Mysirg” )


Ans.#include<stdio.h>

    void revsentence(char s[], char r[], int l)
    {
        int i,p,j,m=0;

        for(i=l-1; i >= -1; i--)
        {
            if(s[i]==' ' || i == -1)
            {
                p=i+1;
                for(j=p; s[j]!='\0' && s[j]!='"' && s[j] != ' '; j++)
                {
                    r[m]=s[j];
                    m++;
                }
                r[m]=' ';
                m++;
            }
        }
    }

    int main()
    {
        char s[100]="SHREE CEMENTS INDUSTRIES PRIVATE LIMITED LIPNI BIRTA BIRGUNJ NEPAL";


        int l,k;
        for(l=0; s[l]; l++);
        printf("%d\n",l);

        char r[l];

        revsentence(s, r, l);
        for(k=0;k<l;k++)
        {
            printf("%c",r[k]);
        }
        return 0;
    }

10. Write a function to find the repeated character in a given string.


Ans.#include<stdio.h>

    int main()
    {
        char s[100]="i like programming";

        int i, k='0',a,j,count=0;
        for(i=0; s[i]; i++)
        {
            count=0;
            a=s[i];
            for(j=0; s[j]; j++)
            {
                if(a==s[j] && s[j]!=' ' && s[j]!='0')
                {
                    count++;
                    s[j]=k;
                }
            }
            if(count>=1)
            {
                printf("%c:%d\n",a,count);
            }
        }
    }
