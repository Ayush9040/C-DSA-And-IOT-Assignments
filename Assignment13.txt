1. Write a recursive function to calculate sum of first N natural numbers

Ans.#include<stdio.h>

    int sumN(int);

    int main()
    {
        printf("%d",sumN(5));
        return 0;
    }

    int sumN(int n)
    {
        if(n==0)
        {
            return 0;
        }
        return ((sumN(n-1))+(n));
    }


2. Write a recursive function to calculate sum of first N odd natural numbers

Ans.#include<stdio.h>

    int sumOdd(int);

    int main()
    {
        printf("%d",sumOdd(3));
        return 0;
    }

    int sumOdd(int n)
    {
        if(n==0)
        {
            return 0;
        }
        return ((sumOdd(n-1))+(2*n-1));
    }


3. Write a recursive function to calculate sum of first N even natural numbers

Ans.#include<stdio.h>

    int sumEven(int);

    int main()
    {
        printf("%d",sumEven(5));
        return 0;
    }

    int sumEven(int n)
    {
        if(n==0)
        {
            return 0;
        }
        return ((sumEven(n-1))+(2*n));
    }


4. Write a recursive function to calculate sum of squares of first n natural numbers

Ans.#include<stdio.h>

    int sumSquare(int);

    int main()
    {
        printf("%d",sumSquare(5));
        return 0;
    }

    int sumSquare(int n)
    {
        if(n==0)
        {
            return 0;
        }
        return ((sumSquare(n-1))+(n*n));
    }

5. Write a recursive function to calculate sum of digits of a given number

Ans.#include<stdio.h>

    int sumDigit(int);

    int main()
    {
        printf("%d",sumDigit(2318));
        return 0;
    }

    int sumDigit(int n)
    {
        if(n==0)
        {
            return 0;
        }
        return ((sumDigit(n/10))+(n%10));
    }

6. Write a recursive function to calculate factorial of a given number

Ans.#include<stdio.h>

    int fact(int);

    int main()
    {
        printf("%d",fact(5));
        return 0;
    }

    int fact(int n)
    {
        if(n==0)
        {
            return 1;
        }
        return ((fact(n-1)*(n)));
    }


7. Write a recursive function to calculate HCF of two numbers

Ans.#include<stdio.h>

    int hcf(int,int);

    int main()
    {
        printf("HCF of two numbers are %d",hcf(4,6));
        return 0;
    }

    int hcf(int a, int b)
    {
        if(a==b)
            return a;
        if(a%b==0)
            return b;
        if(b%a==0)
            return a;
        if(a>b)
            return hcf(a%b,b);
        else
            return hcf(a,b%a);
    }



8. Write a recursive function to print first N terms of Fibonacci series

Ans.#include<stdio.h>

    int fibN(int n);

    int main()
    {
        int n = 5;
        for(int i=1; i<=n; i++){
            printf("%d ",fibN(i));
        }
        return 0;
    }

    int fibN(int n)
    {
            if(n==1)
                return 1;

            if(n==2)
                return 1;

            return fibN(n-2)+fibN(n-1);
    }


9. Write a program in C to count the digits of a given number using recursion.

Ans.#include<stdio.h>

    int cD(int n);

    int main()
    {
        printf("Number of Digits are %d",cD(810420));
        return 0;
    }

    int cD(int n)
    {
        int count=1;
        if(n==0)
            return 0;

        return count = count + cD(n/10);
    }



10. Write a program in C to calculate the power of any number using recursion.

Ans.#include<stdio.h>

    int power(int,int);

    int main()
    {
        printf("%d",power(2,3));
        return 0;
    }

    int power(int n, int p)
    {
        if(p==0)
        {
            return 1;
        }

        return (power(n,p-1)*n);
    }
