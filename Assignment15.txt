1. Write a function to find the greatest number from the given array of any size. (TSRS)

Ans. #include<stdio.h>

    int greatest(int b[], int n)
    {
        int t;
        for(int i=0; i<n-1;i++)
        {
            if(b[i] > b[i+1])
            {
                t=b[i];
                b[i]=b[i+1];
                b[i+1]=t;
            }
        }
        return b[n-1];
    }

    void display(int b[], int n)
    {
        for(int i=0; i<n; i++)
        {
            printf("%d ", b[i]);
        }
    }


    int main()
    {
        int n;
        printf("Enter length of an array\n");
        scanf("%d",&n);
        int a[n];

        printf("\nEnter Number\n");
        for(int i=0; i<n; i++)
        {
            scanf("%d",&a[i]);
        }

        printf("Greatest Number is %d\n",greatest(a,n));
        display(a,n);
        return 0;
    }

2. Write a function to find the smallest number from the given array of any size. (TSRS)

Ans. #include<stdio.h>

    int smallest(int b[], int n)
    {
        int t;
        for(int i=0; i<n-1;i++)
        {
            if(b[i] < b[i+1])
            {
                t=b[i];
                b[i]=b[i+1];
                b[i+1]=t;
            }
        }
        return b[n-1];
    }

    void display(int b[], int n)
    {
        for(int i=0; i<n; i++)
        {
            printf("%d ", b[i]);
        }
    }


    int main()
    {
        int n;
        printf("Enter length of an array\n");
        scanf("%d",&n);
        int a[n];

        printf("\nEnter Number\n");
        for(int i=0; i<n; i++)
        {
            scanf("%d",&a[i]);
        }

        printf("Smallest Number is %d\n",smallest(a,n));
        display(a,n);
        return 0;
    }


3. Write a function to sort an array of any size. (TSRS)

Ans.#include<stdio.h>

    void sort(int a[], int n)
    {
        int b;
        for(int i=0; i<n-1; i++)
        {
            b=a[i];
            for(int j=i+1; j<n; j++)
            {
                if(a[j]<b)
                {
                    b=a[j];
                    a[j]=a[i];
                    a[i]=b;
                }
            }
        }
    }


    int main()
    {
        int a[6]={10, 6, 7, 8, 1, 5};

        sort(a,6);
        for(int i=0; i<6; i++)
        {
            printf("%d ",a[i]);
        }
        return 0;
    }

4. Write a function to rotate an array by n position in d direction. The d is an indicative
value for left or right. (For example, if array of size 5 is [32, 29, 40, 12, 70]; n is 2 and
d is left, then the resulting array after left rotation 2 times is [40, 12, 70, 32, 29] )

Ans. #include<stdio.h>

    void rotate(int c[], int n, char dir, int shift_count)
    {
        int temp, i;
        if(dir == 'r')
        {
            while(shift_count)
            {
                temp=c[n-1];
                for(i=n-1; i>=1; i--)
                {
                    c[i]=c[i-1];
                }
                c[0]=temp;
                shift_count--;
            }
        }
        else
        {
            while(shift_count)
            {
                temp=c[0];
                for(i=0; i<=n-2; i++)
                {
                    c[i]=c[i+1];
                }
                c[n-1]=temp;
                shift_count--;
            }
        }
    }

    void display(int b[], int n)
    {
        for(int i=0; i<n; i++)
            printf("%d ",b[i]);
    }

    int main()
    {


        int a[6]={10,20,30,40,50,60};

        rotate( a, 6, 'l', 2);
        display(a, 6);



        return 0;
    }


5. Write a function to find the first occurrence of adjacent duplicate values in the array.
Function has to return the value of the element.

Ans. #include<stdio.h>

    int dupli(int a[], int n)
    {
        int i;
        for(i=0; i<n-1; i++)
        {
            if(a[i] == a[i+1])
                break;
        }

        if(i<(n-1))
            return a[i];

        return 0;
    }

    void display(int a[], int n)
    {
        for(int i=0; i<n; i++)
            printf("%d ", a[i]);
    }

    int main()
    {
        int a[]={3,8,3,8,8,2,9};
        printf("Value is %d",dupli(a, 7));
        return 0;
    }


6. Write a function in C to read n number of values in an array and display it in reverse
order.

Ans. #include<stdio.h>

    void reverse(int a[], int n)
    {
        int j,mid,k,t;
        mid=n/2;
        k=0;
        for(j=n-1; j>=mid; j--)
        {
            t=a[j];
            a[j]=a[k];
            a[k]=t;
            k++;
        }
    }

    int main()
    {
        int n,t;
        printf("Enter length of an Array\n");
        scanf("%d",&n);
        int a[n];

        printf("\nEnter values\n");
        for(int i=0; i<n; i++)
        {
            scanf("%d",&a[i]);
        }

        reverse(a,n);

        printf("\n#####################\n");

        for(int m=0; m<n; m++)
        {
            printf("%d ",a[m]);
        }
        return 0;
    }



7. Write a function in C to count a total number of duplicate elements in an array.

Ans. #include<stdio.h>

    void sort(int a[], int n)
    {
        int b, temp;

        for(int i=0; i<n-1; i++)
        {
            b=a[i];
            for(int j=i+1; j<n; j++)
            {
                if(b>a[j])
                {
                    temp=a[i];
                    a[i]=a[j];
                    a[j]=temp;
                }
            }
        }
    }

    void countdupli(int a[], int n)
    {
        int count=1;
        for(int i=0; i<n; i++)
        {
            if(a[i]==a[i+1])
            {
                count++;
            }
            else
            {
                if(count>1)
                {
                    printf("%d : %d\n",a[i],count);
                }
                count=1;
            }
        }
    }


    void display(int a[], int n)
    {
        int i;
        for(i=0; i<n; i++)
            printf("%d ",a[i]);
    }

    int main()
    {
        int a[]={2,1,9,6,9,1,1};
        sort(a, 7);
        countdupli(a, 7);
    }


8. Write a function in C to print all unique elements in an array.

Ans. #include<stdio.h>

    void printUnique(int a[], int n)
    {
        int t,j;
        for(int i=0; i<n; i++)
        {
            t=a[i];
            for(j=0; j<n; j++)
            {
                if((t==a[j]) && (j != i))
                    break;
            }
            if(j==n)
                printf("%d ",t);
        }
    }

    int main()
    {
        int a[]={1,2,3,3,5,6,5};
        printUnique(a, 7);
        return 0;
    }


9. Write a function in C to merge two arrays of the same size sorted in descending
order.

Ans. #include<stdio.h>


    void sortdesc(int a[], int n)
    {
        int i, j, temp;
        for(i=0; i<n; i++)
        {
            for(j=i+1; j<n; j++)
            {
                if(a[j]> a[i])
                {
                  temp=a[j];
                  a[j]=a[i];
                  a[i]=temp;
                }
            }
        }
    }

    void merge(int a[], int b[], int c[], int n)
    {
        int k=5;
        int j=0;
        for(int i=0; i<2*n; i++)
        {
            if(k==i)
            {
                c[k]=b[j];
                k++;
                j++;
            }
            else
            {
                c[i]=a[i];
            }
        }
    }

    void display(int a[], int n)
    {
        for(int i=0; i<n; i++)
            printf("%d ",a[i]);
    }

    int main()
    {
        int a[]={23,8,31,40,9};
        int b[]={90,45,95,5,7};
        int c[10];

        merge(a, b, c, 5);

        display(c, 10);
        printf("\n#############################\n");
        sortdesc(c, 10);

        printf("\n###################################\n");
        display(c,10);
        return 0;
    }


10. Write a function in C to count the frequency of each element of an array.

Ans. #include<stdio.h>


  void sortasec(int a[], int n)
  {
      int i, j, temp;
      for(i=0; i<n; i++)
      {
          for(j=i+1; j<n; j++)
          {
              if(a[j]< a[i])
              {
                temp=a[j];
                a[j]=a[i];
                a[i]=temp;
              }
          }
      }
  }

  void countdupli(int a[], int n)
  {
      int count=1;
      for(int i=0; i<n; i++)
      {
          if(a[i]==a[i+1])
          {
              count++;
          }
          else
          {
              printf("%d : %d\n",a[i],count);
              count=1;
          }
      }
  }

  void display(int a[], int n)
  {
      for(int i=0; i<n; i++)
          printf("%d ", a[i]);
  }

  int main()
  {
      int a[]={23,8,8,31,40,9,8, 31};
      sortasec(a, 8);
      countdupli(a, 8);

      return 0;
  }
