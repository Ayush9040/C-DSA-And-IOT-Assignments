1. Write a program to find the number of vowels in each of the 5 strings stored in two
dimensional arrays, taken from the user.

Ans. #include<stdio.h>

    int main()
    {
        char a[5][20];

        int i,j, count=0,k=1;
        printf("Enter 5 Names\n");
        for(i=0; i<=4; i++)
        {
            fgets(a[i],20,stdin);
        }

        printf("\n\n");

        for(i=0; i<5; i++)
        {
            count=0;
            for(j=0; a[i][j]; j++)
            {
                if(a[i][j]=='a' || a[i][j]=='e' || a[i][j]=='i' || a[i][j]=='o' || a[i][j]=='u' || a[i][j]=='A' || a[i][j]=='E' || a[i][j]=='I' || a[i][j]=='O' || a[i][j]=='U')
                {
                    count++;
                }
            }
            printf("\nTotal number of vowel in %d word is %d\n", k, count);
            k++;
        }
        return 0;
    }


2. Write a program to sort 10 city names stored in two dimensional arrays, taken from
the user.

Ans.#include <stdio.h>

    int main() {
        char a[10][20]={
                "Patna",
                "Alaska",
                "Alwar",
                "Jaipur",
                "Sahibabad",
                "Wazirpur",
                "Meerut",
                "Bagha",
                "Alwar",
                "Ghaziabad"
        };

        int i,j;
        char s[100];

        for(i=0; i<10; i++)
        {
            for(j=i+1; j<10; j++)
            {
                if(strcmp(a[i],a[j])>0)
                {
                    strcpy(s,a[i]);
                    strcpy(a[i],a[j]);
                    strcpy(a[j],s);
                }
            }
        }

        for(i=0; i<10; i++)
        {
            printf("%s\n",a[i]);
        }

        return 0;
    }


3. Write a program to read and display a 2D array of strings in C language.

Ans. #include<stdio.h>

      int main()
      {
          char a[5][20];
          int i,j;
          printf("Enter 5 Strings\n");
          for(i=0; i<5; i++)
          {
              fgets(a[i],20,stdin);
          }

          printf("\n\n");

          printf("Below are the 5 Strings which are entered\n");

          for(i=0; i<5; i++)
          {
              printf("%s",a[i]);
          }


          return 0;
      }


4. Write a program to search a string in the list of strings.

Ans. #include<stdio.h>

      int main()
      {
          char a[4][20]={"Ajmer", "Patna", "Delhi", "Mumbai"};

          char s[]="Mumbai";

          int i,j;

          for(i=0; i<4; i++)
          {
              if(strcmp(s, a[i])==0)
              {
                  printf("%s is present in search list at position %d",a[i],i);
                  break;
              }
          }

          if(i==4)
          {
              printf("Search String is not present");
          }
          return 0;
      }


5. Suppose we have a list of email addresses, check whether all email addresses have
‘@’ in it. Print the odd email out.

Ans. #include<stdio.h>

    int main()
    {
        char a[6][40]={"sumitjain@gmail.com",
                        "akshay6754@gmail.com",
                        "adityachaudhary.com",
                        "prateekjain",
                        "ayush",
                        "subhash@gmail.com"
        };

        int flag;

        int i,j;

        printf("\n\n");

        for(i=0; i<6; i++)
        {
            flag=0;
            for(j=0; a[i][j]; j++)
            {
                if(a[i][j]=='@')
                {
                    flag=1;
                    break;
                }
            }
            if(flag==0)
            {
                printf("%s\n",a[i]);
            }
        }

        return 0;
    }


6. Write a program to print the strings which are palindrome in the list of strings.

Ans. #include<stdio.h>

      int main()
      {
          char a[6][40]={"Dhruv",
                          "naman",
                          "malayalam",
                          "level",
                          "pyaar",
                          "abcba"
          };

          int flag;

          int i,j;

          int start=-1, end;


          for(i=0; i<6; i++)
          {
              printf("%s\n",a[i]);
          }

          printf("\n\n");

          for(i=0; i<6; i++)
          {
              start=0;
              end=(strlen(a[i]))-1;
              flag=0;
              while(start<=end)
              {
                  if(a[i][start]!=a[i][end])
                  {
                      flag=1;
                      break;
                  }
                  start=start+1;
                  end=end-1;
              }
              if(flag==0)
              {
                  printf("%s\n",a[i]);
              }
          }


          return 0;
      }


7. From the list of IP addresses, check whether all ip addresses are valid.

Ans. // Online C compiler to run C program online
    #include <stdio.h>
    #include <string.h>
    #include <stdlib.h>

    int main() {
        // Write C code here
        char a[5][40]={
                "123.0.23.80",
                "43.12.90",
                "193.55.23.1",
                "12.45.300.67",
                "14.67.23.23"
        };

        int i,j,k=0;

        for(i=0; i<5; i++)
        {
            printf("%s\n",a[i]);
        }

        printf("\n\n");

        char *b=NULL;

        for(i=0; i<5; i++)
        {
            k=0;
            b=strtok(a[i],".");
            while(b != NULL)
            {
                int x = atoi(b);
                if((x>=0) && (x<=255))
                {
                    k++;
                }
                b=strtok(NULL,".");
            }
            if(k==4)
            {
                printf("Address is valid at pos %d\n",i);
            }
        }

        return 0;
    }

8. Given a list of words followed by two words, the task is to find the minimum distance
between the given two words in the list of words.
(Example : s = {“the”,”quick”,”brown”,”fox”,”quick”}
word1 = “the”, word2 = “fox”, OUTPUT : 1 )

Ans. #include <stdio.h>

      int main()
      {
          char a[5][20]={"my","name","name","is","ayush"};
          char w1[] = "my";
          char w2[] = "ayush";
          int i,l= -1,m= -1,min=1000;
          for(i=0; i<5; i++)
          {
              if(strcmp(w1,a[i])==0)
              {
                  l=i;
              }
              if(strcmp(w2,a[i])==0)
              {
                  m=i;
              }
              if(l != -1 && m != -1)
              {
                  min=abs(m-l);
              }
          }
          printf("%d",min-1);
          return 0;
      }


9. Write a program that asks the user to enter a username. If the username entered is
one of the names in the list then the user is allowed to calculate the factorial of a
number. Otherwise, an error message is displayed

Ans. #include<stdio.h>

      int fact(int n)
      {
          int fact=1;
          for(int i=2; i<=n; i++)
          {
              fact=fact*i;
          }
          return fact;
      }

      int main()
      {
          char a[4][20]={"Shyam", "Mohit", "Prem", "Jatin"};

          char s[100];
          gets(s);

          int i,j,fac;

          for(i=0; i<4; i++)
          {
              if(strcmp(s, a[i])==0)
              {
                  printf("%s is present in search list at position %d\n",a[i],i);
                  printf("Now you can calculate factorial\n");
                  printf("Enter Number: \n");
                  scanf("%d",&fac);
                  printf("\n%d\n",fact(fac));

                  break;
              }
          }

          if(i==4)
          {
              printf("Error");
          }
          return 0;
      }


10. Create an authentication system. It should be menu driven.

Ans. // Online C compiler to run C program online
      #include <stdio.h>
      #include <string.h>
      #include <stdlib.h>

      int main() {
          // Write C code here
          char a[3][2][40]={
                  {
                      "prateek",
                      "123"
                  },
                  {
                      "MySirg",
                      "456"
                  },
                  {
                      "aditya",
                      "ascii"
                  }
          };
          int i,flag=0;
          char user[]="sumit";
          char password[]="123";

          for(i=0; i<3; i++)
          {
              if(strcmp(user,a[i][0])==0 && strcmp(password,a[i][1])==0)
              {
                  printf("Login successful !!!");
                  flag=1;
              }
          }

          if(flag==0)
          {
              printf("Login Failed !!!");
          }


          return 0;
      }

