1. Define a structure Employee with member variables id, name, salary

Ans. #include<stdio.h>

      int main()
      {
          struct Employee {
              int id;
              char name[50];
              float salary;
          };

          struct Employee e1;
          e1.id=2;
          strcpy(e1.name, "Ayush");
          e1.salary=4000000.000;

          printf("%d %s %f", e1.id, e1.name, e1.salary);

          return 0;
      }


2. Write a function to take input employee data from the user. [ Refer structure from
question 1 ]

Ans. #include<stdio.h>

      struct Employee {
              int id;
              char name[50];
              float salary;
      };

      struct Employee input()
      {
          struct Employee e1;
          printf("Enter id:\n");
          scanf("%d",&e1.id);
          fflush(stdin);
          printf("\nEnter name:\n");
          fgets(e1.name, 50, stdin);
          int i,j,k=0;
          for(i=0; e1.name[i]!='\0'; i++);
          e1.name[i-1]='\0';
          printf("\nEnter Salary:\n");
          scanf("%f",&e1.salary);
          return e1;
      }

      int main()
      {


          struct Employee b;

          struct Employee e1 = input();

          printf("\n%d %s %f", e1.id, e1.name, e1.salary);

          return 0;
      }


3. Write a function to display employee data. [ Refer structure from question 1 ]

Ans. #include<stdio.h>

      struct Employee {
              int id;
              char name[50];
              float salary;
      };

      struct Employee input()
      {
          struct Employee e1;
          printf("Enter id:\n");
          scanf("%d",&e1.id);
          fflush(stdin);
          printf("\nEnter name:\n");
          fgets(e1.name, 50, stdin);
          int i,j,k=0;
          for(i=0; e1.name[i]!='\0'; i++);
          e1.name[i-1]='\0';
          printf("\nEnter Salary:\n");
          scanf("%f",&e1.salary);
          return e1;
      }

      void display(struct Employee b)
      {
          printf("\n%d %s %f\n", b.id, b.name, b.salary);
      }

      int main()
      {


          struct Employee b;

          struct Employee e1 = input();

          display(e1);

          return 0;
      }


4. Write a function to find the highest salary employee from a given array of 10
employees. [ Refer structure from question 1]

Ans. #include<stdio.h>

      struct Employee {
              int id;
              char name[50];
              float salary;
      };

      struct Employee input()
      {
          struct Employee e1;
          printf("Enter id:\n");
          scanf("%d",&e1.id);
          fflush(stdin);
          printf("\nEnter name:\n");
          fgets(e1.name, 50, stdin);
          int i,j,k=0;
          for(i=0; e1.name[i]!='\0'; i++);
          e1.name[i-1]='\0';
          printf("\nEnter Salary:\n");
          scanf("%f",&e1.salary);
          return e1;
      }

      void highestSalary(struct Employee b[], int size)
      {
          float temp = b[0].salary;
          for(int i=0; i<size; i++)
          {
              if(temp<b[i].salary)
              {
                  temp=b[i].salary;
              }
          }
          printf("\nHighest Salary is %f", temp);
      }

      void display(struct Employee b)
      {
          printf("\n%d %s %f", b.id, b.name, b.salary);
      }

      int main()
      {


          struct Employee b[10];

          int i;
          for(i=0; i<10; i++)
          {
              b[i]=input();
          }

          highestSalary(b, 10);

          return 0;
      }


5. Write a function to sort employees according to their salaries [ refer structure from
question 1]

Ans. #include<stdio.h>

      struct Employee {
              int id;
              char name[50];
              float salary;
      };

      struct Employee input()
      {
          struct Employee e1;
          printf("Enter id:\n");
          scanf("%d",&e1.id);
          fflush(stdin);
          printf("\nEnter name:\n");
          fgets(e1.name, 50, stdin);
          int i,j,k=0;
          for(i=0; e1.name[i]!='\0'; i++);
          e1.name[i-1]='\0';
          printf("\nEnter Salary:\n");
          scanf("%f",&e1.salary);
          return e1;
      }

      void sortBySalary(struct Employee b[], int size)
      {
          struct Employee temp;
          int i,j;
          for(i=1; i<=size-1; i++)
          {
              for(j=0; j<=size-1-i;j++)
              {
                  if(b[j].salary>b[j+1].salary)
                  {
                      temp=b[j];
                      b[j]=b[j+1];
                      b[j+1]=temp;
                  }
              }
          }
      }

      void display(struct Employee b)
      {
          printf("\n%d %s %f", b.id, b.name, b.salary);
      }

      int main()
      {


          struct Employee b[4];

          int i;
          for(i=0; i<4; i++)
          {
              b[i]=input();
          }

          sortBySalary(b, 4);

          for(i=0; i<4; i++)
          {
              display(b[i]);
          }



          return 0;
      }

6. Write a function to sort employees according to their names [refer structure from
question 1]

Ans. #include<stdio.h>

      struct Employee {
              int id;
              char name[50];
              float salary;
      };

      struct Employee input()
      {
          struct Employee e1;
          printf("Enter id:\n");
          scanf("%d",&e1.id);
          fflush(stdin);
          printf("\nEnter name:\n");
          fgets(e1.name, 50, stdin);
          int i,j,k=0;
          for(i=0; e1.name[i]!='\0'; i++);
          e1.name[i-1]='\0';
          printf("\nEnter Salary:\n");
          scanf("%f",&e1.salary);
          return e1;
      }

      void sortByName(struct Employee b[], int size)
      {
          struct Employee temp;
          int i,j;
          for(i=0; i<size-1; i++)
          {
              for(j=i; j<size;j++)
              {
                  if(strcmp(b[i].name, b[j].name)>0)
                  {
                      temp=b[i];
                      b[i]=b[j];
                      b[j]=temp;
                  }
              }
          }
      }

      void display(struct Employee b)
      {
          printf("\n%d %s %f", b.id, b.name, b.salary);
      }

      int main()
      {


          struct Employee b[4];

          int i;
          for(i=0; i<3; i++)
          {
              b[i]=input();
          }

          sortByName(b, 3);

          for(i=0; i<3; i++)
          {
              display(b[i]);
          }



          return 0;
      }


7. Write a program to calculate the difference between two time periods.

Ans. #include<stdio.h>

      struct time{
          int sec;
          int min;
          int hrs;
      };

      void diff_time(struct time start, struct time stop, struct time *diff);
      int main()
      {
          struct time start, end, diff;
          printf("Enter Start time\n");
          printf("Enter hours, minutes and seconds:\n");
          scanf("%d %d %d",&start.hrs, &start.min, &start.sec);


          printf("\n\nEnter End time\n");
          printf("Enter hours, minutes and seconds:\n");
          scanf("%d %d %d",&end.hrs, &end.min, &end.sec);

          diff_time(start, end, &diff);

          printf("\ntime Diff: %d:%d:%d - ",start.hrs, start.min, start.sec);
          printf("%d:%d:%d ",end.hrs, end.min, end.sec);
          printf("= %d:%d:%d",diff.hrs,diff.min,diff.sec);

          return 0;
      }

      void diff_time(struct time start, struct time stop, struct time *diff)
      {
          while(start.sec > stop.sec)
          {
              --stop.min;
              stop.sec += 60;
          }
          diff -> sec = stop.sec - start.sec;
          while(start.min > stop.min)
          {
              --stop.hrs;
              stop.min += 60;
          }
          diff -> min = stop.min - start.min;
          diff -> hrs = stop.hrs - start.hrs;
      }



8. Write a program to store information of 10 students and display them using structure.

Ans. #include<stdio.h>

      struct Student{
          int roll;
          char name[30];
      };

      int main()
      {
          struct Student info[10];

          for(int i=0; i<10; i++)
          {
              printf("Student %d\n",i+1);
              printf("Enter roll no:\n");
              scanf("%d",&info[i].roll);
              printf("Enter name :\n");
              scanf("%s", info[i].name);
          }

          for(int i=0; i<10; i++)
          {
              printf("\n%d %s",info[i].roll, info[i].name);
          }
      }


9. Write a program to store information of n students and display them using structure

Ans. #include<stdio.h>

      struct Student{
          int roll;
          char name[30];
      };

      int main()
      {
          int n;
          printf("Enter the number:\n");
          scanf("%d",&n);
          struct Student info[n];

          for(int i=0; i<n; i++)
          {
              printf("Student %d\n",i+1);
              printf("Enter roll no:\n");
              scanf("%d",&info[i].roll);
              printf("Enter name :\n");
              scanf("%s", info[i].name);
          }

          for(int i=0; i<n; i++)
          {
              printf("\n%d %s",info[i].roll, info[i].name);
          }
      }


10. Write a program to enter the marks of 5 students in Chemistry, Mathematics and
Physics (each out of 100) using a structure named Marks having elements roll no.,
name, chem_marks, maths_marks and phy_marks and then display the percentage
of each student.

Ans. #include<stdio.h>

      struct Marks{
          int roll;
          char name[30];
          float chem_marks, maths_marks, phy_marks;
      };

      int main()
      {
          struct Marks marks[5];

          for(int i=0; i<4; i++)
          {
              printf("Student %d\n",i+1);
              printf("Enter roll no:\n");
              scanf("%d",&marks[i].roll);
              printf("Enter name :\n");
              scanf("%s", marks[i].name);
              printf("Enter chemistry Marks:\n");
              scanf("%f",&marks[i].chem_marks);
              printf("Enter Maths Marks:\n");
              scanf("%f",&marks[i].maths_marks);
              printf("Enter Physics Marks:\n");
              scanf("%f",&marks[i].phy_marks);
          }

          for(int i=0; i<4; i++)
          {
              printf("Student %d\n",i+1);
              float per = (marks[i].chem_marks+marks[i].maths_marks+marks[i].phy_marks)/3;
              printf("Percentage : %2f\n",per);
          }
      }
