1. Define a class Complex to represent a complex number with instance variables a and
b to store real and imaginary parts. Also define following member functions
a. void setData(int,int)
b. void showData()
c. Complex add(Complex)

Ans.#include<iostream>
    using namespace std;


    class Complex
    {
        private:
            int a,b;
        public:
            void setData(int c, int d)
            {
                a=c;
                b=d;
            }
            void showData()
            {
                cout<<a<<" + "<<b<<"i"<<endl;
            }
            Complex add(Complex c)
            {
                Complex temp;
                temp.a=a+c.a;
                temp.b=b+c.b;
                return temp;
            }
    };


    int main()
    {
        Complex c1,c2,c3;
        c1.setData(1,2);
        c2.setData(2,3);
        c2.showData();
        c3=c1.add(c2);
        c3.showData();
        return 0;
    }


2. Define a class Time to represent a time with instance variables h,m and s to store
hour, minute and second. Also define following member functions
a. void setTime(int,int,int)
b. void showTime()
c. void normalize()
d. Time add(Time)

Ans.#include<iostream>
    using namespace std;

    class Time
    {
        private:
            int hr;
            int min;
            int sec;
            int day=0;
        public:
            void setTime(int a, int b, int c)
            {
                hr=a;
                min=b;
                sec=c;
            }
            void showTime()
            {
                cout<<day<<"days "<<hr<<"hr "<<min<<"min "<<sec<<"sec"<<endl;
            }
            void normalize()
            {
                if(hr>24)
                {
                    day=hr/24;
                    hr=hr%24;
                }
                if(min>60)
                {
                    hr=hr+min/60;
                    min=min%60;
                }
                if(sec>60)
                {
                    min=min+sec/60;
                    sec=sec%60;
                }
            }
            Time add(Time t)
            {
                Time temp;
                temp.hr=hr+t.hr;
                temp.min=min+t.min;
                temp.sec=sec+t.sec;
                return temp;
            }
    };


    int main()
    {
        Time t1,t2,t3;
        t1.setTime(49,100,130);
        t2.setTime(3,12,45);
        t3=t1.add(t2);
        t1.normalize();
        t1.showTime();
        t3.normalize();
        t3.showTime();
        return 0;
    }



3. Define a class Cube and calculate Volume of Cube and initialise it using constructor.

Ans. #include<iostream>
    using namespace std;

    class Cube
    {
        private:
            int a;
            int vol;
        public:
            Cube(int z)
            {
                a=z;
            }
            void setA(int b)
            {
                a=b;
            }
            void calVol()
            {
                vol=a*a*a;
            }
            int getVol()
            {
                return vol;
            }
            int getA()
            {
                return a;
            }
    };


    int main()
    {
        Cube c1=5;
        Cube c2(4);
        c1.calVol();
        c2.calVol();
        int x = c1.getVol();
        int y = c2.getVol();
        cout<<y<<endl;
        cout<<x;
        return 0;
    }



4. Define a class Counter and Write a program to Show Counter using Constructor.

Ans. #include<iostream>
    using namespace std;

    class Counter
    {
        private:
            static int count;
        public:
            Counter()
            {
                count++;
            }
            static int giveCount()
            {
                return count;
            }
    };

    int Counter::count=0;

    int main()
    {
        Counter c1,c2,c3,c4,c5;
        int a=c1.giveCount();
        cout<<"Count is "<<a;
        return 0;
    }



5. Define a class Date and write a program to Display Dateand initialise date object
using Constructors.

Ans. #include<iostream>
    using namespace std;

    class Date
    {
        private:
            int day;
            int month;
            int year;
        public:
            Date(int e, int f, int g)
            {
                day=e;
                month=f;
                year=g;
            }
            void setDate(int a, int b, int c)
            {
                day=a;
                month=b;
                year=c;
            }
            void showDate()
            {
                cout<<day<<"/"<<month<<"/"<<year<<endl;
            }
    };


    int main()
    {
        Date d1(02,07,2004);
        d1.showDate();
        return 0;
    }



6. Define a class student and write a program to enter student details using constructor
and define member function to display all the details.

Ans. #include<iostream>
    #include<string.h>
    using namespace std;

    class student
    {
        private:
            int cls;
            int age;
            char name[20];
        public:
            student(char a[], int b, int c)
            {
                cls=b;
                age=c;
                strcpy(name,a);
            }
            void showData()
            {
                cout<<name<<endl;
                cout<<cls<<endl;
                cout<<age<<endl;
            }
    };

    int main()
    {
        student s1("Ayush",12,18);
        s1.showData();
        return 0;
    }



7. Define a class Box and write a program to enter length, breadth and height and
initialise objects using constructor also define member functions to calculate volume
of the box.

Ans. #include<iostream>
    using namespace std;


    class Box
    {
        private:
            int l;
            int b;
            int h;
            int vol;
        public:
            Box(int z)
            {
                l=z;
                b=z;
                h=z;
            }
            void setData(int a, int d, int c)
            {
                l=a;
                b=d;
                h=c;
            }
            void calVol()
            {
                vol=l*b*h;
            }
            int getVol()
            {
                return vol;
            }
    };


    int main()
    {
        Box b1=4;
        b1.calVol();
        int x = b1.getVol();
        cout<<x;
        return 0;
    }



8. Define a class Bank and define member functions to read principal , rate of interest
and year. Another member functions to calculate simple interest and display it.
Initialise all details using constructor.

Ans.#include<iostream>
    using namespace std;


    class Bank
    {
        private:
            int principal;
            int time;
            static float interest;
            float si;
        public:
            Bank(int p, int n)
            {
                principal=p;
                time=n;
            }
            void calSI()
            {
                si = (principal*time*interest)/100;
            }
            float getSI()
            {
                return si;
            }
    };

    float Bank::interest=6;

    int main()
    {
        Bank b1(5000,2);
        b1.calSI();
        float x= b1.getSI();
        cout<<x;
        return 0;
    }



9. Define a class Bill and define its member function get() to take detail of customer ,
calculateBill() function to calculate electricity bill using below tariff :
Upto 100 unit RS. 1.20 per unit
From 100 to 200 unit RS. 2 per unit
Above 200 units RS. 3 per unit.

Ans.#include<iostream>
    #include<string.h>
    using namespace std;

    class Bill
    {
        private:
            char name[30];
            int month;
            float units;
            float total;
        public:
            void setData(char a[], int b, float c)
            {
                strcpy(name,a);
                month=b;
                units=c;
            }
            void calBill()
            {
                if(units<=100)
                {
                    total=units*1.20;
                }
                else if(units>100 && units<=200)
                {
                    total=((units-100)*2)+(100*1.20);
                }
                else
                {
                    total = 120 + 200 +((units-200)*3);
                }
            }
            void get()
            {
                cout<<"Name - "<<name<<endl;
                cout<<"Units Consumed - "<<units<<endl;
                cout<<"Month - "<<month<<endl;
                cout<<"Total Bill - "<<total<<endl;
            }
    };

    int main()
    {
        Bill b1;
        b1.setData("Ayush",10,320.0);
        b1.calBill();
        b1.get();
        return 0;
    }



10. Define a class StaticCount and create a static variable. Increment this variable in a
function and call this 3 times and display the result.

Ans.#include<iostream>
    using namespace std;

    class Staticcount
    {
        private:
            static int count;
        public:
            void funCall()
            {
                count++;
            }
            static int countResult()
            {
                return count;
            }
    };

    int Staticcount::count=0;


    int main()
    {
        Staticcount s1;
        s1.funCall();
        s1.funCall();
        s1.funCall();
        int a= s1.countResult();
        cout<<a;
        return 0;
    }
